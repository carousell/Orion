// Code generated by protoc-gen-go. DO NOT EDIT.
// source: foo/foo.proto

package foo

import (
	bar "bar"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FooRequest struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FooRequest) Reset()         { *m = FooRequest{} }
func (m *FooRequest) String() string { return proto.CompactTextString(m) }
func (*FooRequest) ProtoMessage()    {}
func (*FooRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a61802764a7d7e5a, []int{0}
}

func (m *FooRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FooRequest.Unmarshal(m, b)
}
func (m *FooRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FooRequest.Marshal(b, m, deterministic)
}
func (m *FooRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FooRequest.Merge(m, src)
}
func (m *FooRequest) XXX_Size() int {
	return xxx_messageInfo_FooRequest.Size(m)
}
func (m *FooRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FooRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FooRequest proto.InternalMessageInfo

func (m *FooRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type FooResponse struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Bar                  *bar.Bar `protobuf:"bytes,2,opt,name=bar,proto3" json:"bar,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FooResponse) Reset()         { *m = FooResponse{} }
func (m *FooResponse) String() string { return proto.CompactTextString(m) }
func (*FooResponse) ProtoMessage()    {}
func (*FooResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a61802764a7d7e5a, []int{1}
}

func (m *FooResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FooResponse.Unmarshal(m, b)
}
func (m *FooResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FooResponse.Marshal(b, m, deterministic)
}
func (m *FooResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FooResponse.Merge(m, src)
}
func (m *FooResponse) XXX_Size() int {
	return xxx_messageInfo_FooResponse.Size(m)
}
func (m *FooResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FooResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FooResponse proto.InternalMessageInfo

func (m *FooResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *FooResponse) GetBar() *bar.Bar {
	if m != nil {
		return m.Bar
	}
	return nil
}

func init() {
	proto.RegisterType((*FooRequest)(nil), "foo.FooRequest")
	proto.RegisterType((*FooResponse)(nil), "foo.FooResponse")
}

func init() { proto.RegisterFile("foo/foo.proto", fileDescriptor_a61802764a7d7e5a) }

var fileDescriptor_a61802764a7d7e5a = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xcb, 0xcf, 0xd7,
	0x4f, 0xcb, 0xcf, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0xcb, 0xcf, 0x97, 0xe2,
	0x4d, 0x4a, 0x2c, 0xd2, 0x4f, 0x4a, 0x2c, 0x82, 0x88, 0x29, 0xc9, 0x71, 0x71, 0xb9, 0xe5, 0xe7,
	0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09, 0x70, 0x31, 0xe7, 0x16, 0xa7, 0x4b, 0x30,
	0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0x98, 0x4a, 0xd6, 0x5c, 0xdc, 0x60, 0xf9, 0xe2, 0x82, 0xfc,
	0xbc, 0xe2, 0x54, 0x4c, 0x05, 0x42, 0x52, 0x5c, 0xcc, 0x49, 0x89, 0x45, 0x12, 0x4c, 0x0a, 0x8c,
	0x1a, 0xdc, 0x46, 0x1c, 0x7a, 0x20, 0x93, 0x9d, 0x12, 0x8b, 0x82, 0x40, 0x82, 0x46, 0x16, 0x60,
	0xc3, 0x83, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85, 0xb4, 0xb8, 0x98, 0xdd, 0xf2, 0xf3, 0x85,
	0xf8, 0xf5, 0x40, 0x2e, 0x42, 0x58, 0x2a, 0x25, 0x80, 0x10, 0x80, 0xd8, 0xa2, 0xc4, 0x90, 0xc4,
	0x06, 0x76, 0x9d, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x53, 0xa6, 0x7b, 0x52, 0xc2, 0x00, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FooServiceClient is the client API for FooService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FooServiceClient interface {
	Foo(ctx context.Context, in *FooRequest, opts ...grpc.CallOption) (*FooResponse, error)
}

type fooServiceClient struct {
	cc *grpc.ClientConn
}

func NewFooServiceClient(cc *grpc.ClientConn) FooServiceClient {
	return &fooServiceClient{cc}
}

func (c *fooServiceClient) Foo(ctx context.Context, in *FooRequest, opts ...grpc.CallOption) (*FooResponse, error) {
	out := new(FooResponse)
	err := c.cc.Invoke(ctx, "/foo.FooService/Foo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FooServiceServer is the server API for FooService service.
type FooServiceServer interface {
	Foo(context.Context, *FooRequest) (*FooResponse, error)
}

func RegisterFooServiceServer(s *grpc.Server, srv FooServiceServer) {
	s.RegisterService(&_FooService_serviceDesc, srv)
}

func _FooService_Foo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FooRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FooServiceServer).Foo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/foo.FooService/Foo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FooServiceServer).Foo(ctx, req.(*FooRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FooService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "foo.FooService",
	HandlerType: (*FooServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Foo",
			Handler:    _FooService_Foo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "foo/foo.proto",
}
